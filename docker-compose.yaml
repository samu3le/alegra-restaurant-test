version: '3.8'

volumes:
  postgres_data:

networks:
  test_restaurant:
    external: true

services: 
    api_gateway:
      container_name: test_restaurant_api_gateway
      build:
        context: ./api-gateway
        dockerfile: Dockerfile
        args:
          WWWGROUP: '${GID}'
      command: bash -c 'php artisan serve --host 0.0.0.0'
      extra_hosts:
        - 'host.docker.internal:host-gateway'
      ports:
        - '8080:80'
      environment:
        WWWUSER: '${UID}'
      env_file:
        - ./.env
      volumes:
        - './api-gateway/:/var/www/html'
      depends_on: 
        - db
      links:
        - db
      networks:
        - test_restaurant
  
    microservice-a:
      build:
        context: ./microservice-a
        dockerfile: Dockerfile
        args:
          WWWGROUP: '${GID}'
      extra_hosts:
        - 'host.docker.internal:host-gateway'
      environment:
        WWWUSER: '${UID}'
      volumes:
        - './microservice-a/:/var/www/html'
      networks:
        - test_restaurant
        
    db:
      image: postgres:13.0-alpine
      restart: 'always'
      container_name: test_restaurant_db
      volumes:
        - postgres_data:/var/lib/postgresql/data/
      environment:
        POSTGRES_DB: "${DB_DATABASE}"
        POSTGRES_USER: "${DB_USERNAME}"
        POSTGRES_PASSWORD: "${DB_PASSWORD}"
      ports:
        - "5434:${DB_PORT}"
      networks:
        - test_restaurant